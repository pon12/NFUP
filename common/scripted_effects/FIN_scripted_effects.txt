#	Example:
#
#	example_effect = {
#		add_political_power = 66
#		add_popularity = {
#			ideology = fascism
#			popularity = 0.33
#		}
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
#


FIN_nokia_tires_after_tech_effect = {
	if = {
		limit = {
			927 = {
				free_building_slots = {
					building = synthetic_refinery
					size > 1
					include_locked = yes
				}
			}
		}
		927 = { #HÄME (Tampere - Nokia)
			add_extra_state_shared_building_slots = 3
			add_building_construction = {
				type = synthetic_refinery
				level = 2
				instant_build = yes
			}
		}
	}
	else_if = {
		limit = {
			927 = {
				free_building_slots = {
					building = synthetic_refinery
					size > 0
					include_locked = yes
				}
			}
		}
		927 = { #HÄME (Tampere - Nokia)
			add_extra_state_shared_building_slots = 2
			add_building_construction = {
				type = synthetic_refinery
				level = 1
				instant_build = yes
			}
		}
		random_core_state = {
			limit = {
				is_fully_controlled_by = ROOT
				free_building_slots = {
					building = synthetic_refinery
					size > 0
					include_locked = yes
				}
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = synthetic_refinery
				level = 1
				instant_build = yes
			}
		}
	}
	else = {
		random_core_state = {
			limit = {
				is_fully_controlled_by = ROOT
				free_building_slots = {
					building = synthetic_refinery
					size > 0
					include_locked = yes
				}
			}
			add_extra_state_shared_building_slots = 3
			add_building_construction = {
				type = synthetic_refinery
				level = 2
				instant_build = yes
			}
		}
	}

	if = {
		limit = {
			has_idea = FIN_nokia
		}
		swap_ideas = {
			remove_idea = FIN_nokia
			add_idea = FIN_nokia_improved
		}
	}
}

### OPERATIVES
FIN_create_operative_hella_wuolijok = { # Focus The Red Watch & Focus Trade Agreements
	create_operative_leader = {
		name = "Hella Wuolijok"
		GFX = GFX_portrait_FIN_hella_wuolijok
		traits = { operative_well_groomed operative_escape_artist }
		bypass_recruitment = no
		available_to_spy_master = yes
		nationalities = { FIN EST }
	}
}

FIN_create_operative_vilho_pentikainen = { # Focus The Red Watch
	create_operative_leader = {
		name = "Vilho Pentikäinen"
		GFX = GFX_portrait_FIN_vilho_pentikainen
		traits = { operative_safe_cracker operative_master_interrogator }
		bypass_recruitment = no
		available_to_spy_master = yes
		nationalities = { FIN SOV }
	}
}


### DECISIONS

FIN_seize_weapon_caches = { #Used on the state scope
	remove_dynamic_modifier = { modifier = FIN_weapon_caches_modifier }
	ROOT = {
		random_list = {
			#log = yes
			25 = {
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = 15
					producer = FIN
				}
			}
			25 = {
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = 35
					producer = FIN
				}
			}
			25 = {
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = 50
					producer = FIN
				}
			}
			25 = {
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = 65
					producer = FIN
				}
				add_equipment_to_stockpile = {
					type = support_equipment
					amount = 35
					producer = FIN
				}
			}
		}
	}
}


### CONTINUATION WAR

FIN_pact_for_continuation_war_start = { #To be used on FIN's scope - Used immediately upon signing agreement
	FIN = {
		give_military_access = GER
		diplomatic_relation = { 
			country = GER
			relation = docking_rights 
			active = yes
		}
		diplomatic_relation = { 
			country = GER
			relation = non_aggression_pact 
			active = yes
		}
	}
	GER = { give_guarantee = FIN }
}

### STATE CHANGES AND NAMES ###

#Change name of States and VPs when appropriate. Expected to be used inside on_state_control_changed. FROM.FROM is state / ROOT is new controller / FROM is former controller
FIN_change_name_of_state_or_vp = {
	IF = { # Petrozavodsk / Äänislinna
		limit = {
			FROM.FROM = {
				state = 216 #OLONETS
			}
		}
		IF = { #FINLAND CONTROLLER
			limit = {
				OR = {
					ROOT = { original_tag = FIN }
				}
			}
			set_province_name = { id = 11159 name = VICTORY_POINTS_11159_FIN }
		}
		ELSE_IF = { #OTHER CONTROLLER
			limit = {
				OR = {
					FROM = { original_tag = FIN }
				}
				ROOT = {
					NOT = {
						OR = {
							original_tag = FIN
						}
					}
				}
			}
			reset_province_name = 11159
		}
	}
	ELSE_IF = { # MURMANSK / KUOLAN NIEMIMAA // (Murmansk / Muurmanski) (Kandalaksha / Kantalahti)
		limit = {
			FROM.FROM = {
				state = 213 #MURMANSK
			}
		}
		IF = { #FINLAND CONTROLLER
			limit = {
				OR = {
					ROOT = { original_tag = FIN }
				}
			}
			FROM.FROM = { set_state_name = STATE_213_FIN }
			set_province_name = { id = 3134 name = VICTORY_POINTS_3134_FIN } #Murmansk
			set_province_name = { id = 6181 name = VICTORY_POINTS_6181_FIN } #Kandalaksha
		}
		ELSE_IF = { #OTHER CONTROLLER
			limit = {
				OR = {
					FROM = { original_tag = FIN }
				}
				ROOT = {
					NOT = {
						OR = {
							original_tag = FIN
						}
					}
				}
			}
			FROM.FROM = { reset_state_name = yes }
			reset_province_name = 3134
			reset_province_name = 6181
		}
	}
}




########   #######  ########
##     ## ##     ## ##     ##
##     ## ##     ## ##     ##
########  ##     ## ########
##     ## ##     ## ##
##     ## ##     ## ##
########   #######  ##


FIN_increase_sisu_ns_effect = {
	if = {
		limit = {
			has_idea = FIN_sisu_1
		}
		swap_ideas = {
			remove_idea = FIN_sisu_1
			add_idea = FIN_sisu_2
		}
	}
	else_if = {
		limit = {
			has_idea = FIN_sisu_2
		}
		swap_ideas = {
			remove_idea = FIN_sisu_2
			add_idea = FIN_sisu_3
		}
	}
	else_if = {
		limit = {
			has_idea = FIN_sisu_3
		}
		swap_ideas = {
			remove_idea = FIN_sisu_3
			add_idea = FIN_sisu_4
		}
	}
	else_if = {
		limit = {
			has_idea = FIN_sisu_4
		}
		swap_ideas = {
			remove_idea = FIN_sisu_4
			add_idea = FIN_sisu_5
		}
	}
}

FIN_decrease_sisu_ns_effect = {
	if = {
		limit = {
			has_idea = FIN_sisu_5
		}
		swap_ideas = {
			remove_idea = FIN_sisu_5
			add_idea = FIN_sisu_4
		}
	}
	else_if = {
		limit = {
			has_idea = FIN_sisu_4
		}
		swap_ideas = {
			remove_idea = FIN_sisu_4
			add_idea = FIN_sisu_3
		}
	}
	else_if = {
		limit = {
			has_idea = FIN_sisu_3
		}
		swap_ideas = {
			remove_idea = FIN_sisu_3
			add_idea = FIN_sisu_2
		}
	}
	else_if = {
		limit = {
			has_idea = FIN_sisu_2
		}
		swap_ideas = {
			remove_idea = FIN_sisu_2
			add_idea = FIN_sisu_1
		}
	}
}

FIN_reset_bop_for_new_leader = { #Reset BoP to 0 (only if lower than 0)
	if = {
		limit = {
			power_balance_value = {
				id = FIN_power_balance
				value < 0
			}
		}
		set_power_balance = {
			id = FIN_power_balance
			set_value = 0
		}
	}
}

FIN_kallio_becomes_country_leader = {
	retire_country_leader = yes
	effect_tooltip = { #Kyosti Kallio will automatically be the next in line after Svinhufvud, so this is just for tooltip purposes
		promote_character = FIN_kyosti_kallio
	}
	#Set Maalaisliitto (Agrarian League) as Non-Aligned party
	set_party_name = {
		ideology = neutrality
		name = FIN_neutrality_party
		long_name = FIN_neutrality_party_long
	}
	FIN_reset_bop_for_new_leader = yes
}

FIN_ryti_becomes_country_leader = {
	retire_country_leader = yes
	effect_tooltip = { #Risto Ryti will automatically be the next in line after Kallio, so this is just for tooltip purposes
		promote_character = FIN_risto_ryti
	}
	#Set National Progressive Party as Non-Aligned party
	set_party_name = {
		ideology = neutrality
		name = FIN_neutrality_party_progressive
		long_name = FIN_neutrality_party_progressive_long
	}
	FIN_reset_bop_for_new_leader = yes
}

FIN_paasikivi_becomes_country_leader = {
	if = {
		limit = {
			has_country_leader = {
				ruling_only = yes
				character = FIN_risto_ryti
			}
		}
		retire_country_leader = yes
	}
	else_if = {
		limit = {
			has_country_leader = {
				ruling_only = yes
				character = FIN_carl_mannerheim
			}
		}
		remove_country_leader_role = { #Removing country role on Mannerheim (instead of retiring) since he should still be a military guy.
			character = FIN_carl_mannerheim
			ideology = oligarchism
		}
	}

	#Paasikivi should usually be the next in line after Ryti or Mannerheim, but just in case due to Mannerheim intereference
	promote_character = FIN_juho_kusti_paasikivi

	#Set Kokoomus as Non-Aligned party
	set_party_name = {
		ideology = neutrality
		name = FIN_neutrality_party_kokoomus
		long_name = FIN_neutrality_party_kokoomus_long
	}
	FIN_reset_bop_for_new_leader = yes
}

FIN_mannerheim_becomes_country_leader = {
	#In this case we do want to keep the political leaders (Ryti or Paasikivi)
	promote_character = FIN_carl_mannerheim
	#Set National Progressive Party as Non-Aligned party
	set_party_name = {
		ideology = neutrality
		name = FIN_neutrality_party_military
		long_name = FIN_neutrality_party_military_long
	}
	if = {
		limit = {
			power_balance_value = {
				id = FIN_power_balance
				value < 0.1
			}
		}
		set_power_balance = {
			id = FIN_power_balance
			set_value = 0.1
		}
	}
}

FIN_check_and_manage_losing_cores_for_bop_effect = {
	if = {
		limit = {
			any_core_state = {
				is_owned_by = ROOT
				NOT = { is_controlled_by = ROOT }
			}
		}
		if = {
			limit = {
				NOT = {
					has_power_balance_modifier = {
						id = FIN_power_balance
						modifier = FIN_bop_modifier_finnish_sovereignty_threatened
					}
				}
			}
			add_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_finnish_sovereignty_threatened
			}
		}
	}
	else_if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_finnish_sovereignty_threatened
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_finnish_sovereignty_threatened
		}
	}
}



FIN_clean_all_obsolete_bop_modifiers_effect = {
	if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_eradicate_socialism
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = FIN_pehr_evind_svinhufvud
				}
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_eradicate_socialism
		}
	}
	if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_eradicate_extremists
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = FIN_kyosti_kallio
				}
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_eradicate_extremists
		}
	}
	if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_dream_of_greater_finland
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = FIN_risto_ryti
				}
				has_country_leader = {
					ruling_only = yes
					character = FIN_prince_wolfgang_von_hesse
				}
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_dream_of_greater_finland
		}
	}
	if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_reliable_leader
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = FIN_carl_mannerheim
				}
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_reliable_leader
		}
	}
	if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_realist_conservative
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = FIN_juho_kusti_paasikivi
				}
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_realist_conservative
		}
	}
	if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_strong_nation
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = FIN_vilho_annala
				}
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_strong_nation
		}
	}
	if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_united_nation
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = FIN_vaino_tanner
				}
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_united_nation
		}
	}
	if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_anti_fascist_crusade
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = FIN_aimo_aaltonen
				}
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_anti_fascist_crusade
		}
	}
	if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_obliterated_european_fascism
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = FIN_yrjo_leino
				}
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_obliterated_european_fascism
		}
	}
	if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_a_solar_system_of_organizations
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = FIN_otto_wille_kuusinen
				}
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_a_solar_system_of_organizations
		}
	}
	if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_finnish_sovereignty_threatened
			}
			has_country_leader = { #Everyone can have this modifier except Mannerheim
				ruling_only = yes
				character = FIN_carl_mannerheim
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_finnish_sovereignty_threatened
		}
	}
	if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_concerning_support_for_socialists
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = FIN_pehr_evind_svinhufvud
				}
				has_country_leader = {
					ruling_only = yes
					character = FIN_risto_ryti
				}
				has_country_leader = {
					ruling_only = yes
					character = FIN_prince_wolfgang_von_hesse
				}
				has_country_leader = {
					ruling_only = yes
					character = FIN_vilho_annala
				}
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_concerning_support_for_socialists
		}
	}
	if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_concerning_support_for_extremists
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = FIN_kyosti_kallio
				}
				has_country_leader = {
					ruling_only = yes
					character = FIN_vaino_tanner
				}
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_concerning_support_for_extremists
		}
	}
	if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_appointed_regent
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = FIN_carl_mannerheim
				}
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_appointed_regent
		}
	}
	if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_caretaker
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = FIN_juho_kusti_paasikivi
				}
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_caretaker
		}
	}
	if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_divided_proletariat
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = FIN_aimo_aaltonen
				}
				has_country_leader = {
					ruling_only = yes
					character = FIN_yrjo_leino
				}
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_divided_proletariat
		}
	}
	if = {
		limit = {
			has_power_balance_modifier = {
				id = FIN_power_balance
				modifier = FIN_bop_modifier_forgotten_finno_karelians
			}
			NOT = {
				has_country_leader = {
					ruling_only = yes
					character = FIN_otto_wille_kuusinen
				}
			}
		}
		remove_power_balance_modifier = {
			id = FIN_power_balance
			modifier = FIN_bop_modifier_forgotten_finno_karelians
		}
	}
}

FIN_initiate_balance_of_power_effect = {
	set_power_balance = {
		id = FIN_power_balance
		set_default = yes
	}
}

FIN_bop_absurdly_high_increase_effect = {
	add_power_balance_value = {
		id = FIN_power_balance
		value = 1
	}
}

FIN_bop_very_high_increase_effect = {
	add_power_balance_value = {
		id = FIN_power_balance
		value = 0.25
	}
}

FIN_bop_high_increase_effect = {
	add_power_balance_value = {
		id = FIN_power_balance
		value = 0.2
	}
}

FIN_bop_medium_increase_effect = {
	add_power_balance_value = {
		id = FIN_power_balance
		value = 0.15
	}
}

FIN_bop_low_increase_effect = {
	add_power_balance_value = {
		id = FIN_power_balance
		value = 0.1
	}
}

FIN_bop_very_low_increase_effect = {
	add_power_balance_value = {
		id = FIN_power_balance
		value = 0.05
	}
}

FIN_bop_absurdly_high_decrease_effect = {
	add_power_balance_value = {
		id = FIN_power_balance
		value = -1
	}
}

FIN_bop_very_high_decrease_effect = {
	add_power_balance_value = {
		id = FIN_power_balance
		value = -0.25
	}
}

FIN_bop_high_decrease_effect = {
	add_power_balance_value = {
		id = FIN_power_balance
		value = -0.2
	}
}

FIN_bop_medium_decrease_effect = {
	add_power_balance_value = {
		id = FIN_power_balance
		value = -0.15
	}
}

FIN_bop_low_decrease_effect = {
	add_power_balance_value = {
		id = FIN_power_balance
		value = -0.1
	}
}

FIN_bop_very_low_decrease_effect = {
	add_power_balance_value = {
		id = FIN_power_balance
		value = -0.05
	}
}